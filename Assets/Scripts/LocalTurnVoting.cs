using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class LocalTurnVoting : MonoBehaviour {

	TurnRoomScript myRoom;
	string drawing;

	public GameObject redLine;
	public GameObject blueLine;
	public GameObject greenLine;
	public GameObject orangeLine;

	public GameObject redDot;
	public GameObject blueDot;
	public GameObject greenDot;
	public GameObject orangeDot;

	private static string MYCOLOR_SYM = "[MYCOLOR]";


	// Use this for initialization
	void Start () {

		//drawing = "$[MYCOLOR]1:-1.88, 0.27@-1.87, 0.26@-1.87, 0.25@-1.85, 0.23@-1.84, 0.21@-1.83, 0.20@-1.82, 0.18@-1.81, 0.18@-1.81, 0.16@-1.80, 0.16@-1.79, 0.15@-1.78, 0.15@-1.77, 0.15@-1.75, 0.15@-1.74, 0.15@-1.73, 0.15|-1.73, 0.15@-1.73, 0.14@-1.73, 0.12@-1.74, 0.10|-1.73, 0.12@-1.74, 0.11@-1.75, 0.09@-1.76, 0.08@-1.76, 0.07@-1.79, 0.07@-1.80, 0.07@-1.80, 0.09@-1.81, 0.11@-1.81, 0.15@-1.80, 0.16@-1.79, 0.19@-1.79, 0.20@-1.78, 0.22@-1.77, 0.24@-1.76, 0.25@-1.75, 0.27@-1.75, 0.29@-1.73, 0.33@-1.72, 0.35@-1.69, 0.40@-1.67, 0.44@-1.65, 0.49@-1.63, 0.52@-1.61, 0.57@-1.59, 0.59@-1.57, 0.63@-1.55, 0.66@-1.52, 0.70@-1.51, 0.72@-1.50, 0.74@-1.49, 0.75@-1.48, 0.77@-1.44, 0.83@-1.40, 0.87@-1.35, 0.94@-1.33, 0.97@-1.28, 1.02@-1.26, 1.05@-1.21, 1.12@-1.17, 1.18@-1.14, 1.23@-1.09, 1.30@-1.07, 1.32@-1.03, 1.38@-1.00, 1.40@-0.95, 1.45@-0.92, 1.47@-0.87, 1.52@-0.81, 1.58@-0.79, 1.59@-0.74, 1.64@-0.70, 1.67@-0.66, 1.71@-0.64, 1.74@-0.60, 1.80@-0.57, 1.82@-0.52, 1.87@-0.50, 1.89@-0.46, 1.93@-0.44, 1.95@-0.41, 1.99@-0.39, 2.01@-0.36, 2.06@-0.34, 2.09@-0.30, 2.14@-0.28, 2.18@-0.27, 2.19@-0.26, 2.22@-0.25, 2.23@-0.24, 2.25@-0.24, 2.26@-0.22, 2.28@-0.21, 2.30@-0.20, 2.32@-0.19, 2.33@-0.17, 2.35@-0.16, 2.37@-0.14, 2.40@-0.12, 2.42|-0.14, 2.40@-0.12, 2.43@-0.10, 2.45@-0.09, 2.47@-0.09, 2.48@-0.08, 2.49$[MYCOLOR]2:0.33, 2.43@0.33, 2.43@0.32, 2.43@0.28, 2.43@0.26, 2.43@0.23, 2.43@0.19, 2.43@0.18, 2.43@0.15, 2.43@0.13, 2.43|0.15, 2.43@0.13, 2.43@0.11, 2.43@0.10, 2.43@0.09, 2.43|0.09, 2.43@0.10, 2.43@0.12, 2.43@0.14, 2.43@0.20, 2.43@0.36, 2.42@0.49, 2.40@0.51, 2.40@0.62, 2.38@0.68, 2.37@0.70, 2.36@0.74, 2.35@0.76, 2.32@0.81, 2.25@0.84, 2.20@0.88, 2.13@0.89, 2.11@0.90, 2.09@0.90, 2.06@0.93, 1.97@1.02, 1.69@1.06, 1.56@1.13, 1.34@1.17, 1.22@1.19, 1.15@1.22, 1.06@1.25, 0.95@1.27, 0.90@1.32, 0.79@1.34, 0.75@1.37, 0.67@1.38, 0.64@1.42, 0.55@1.42, 0.51@1.44, 0.42@1.45, 0.38@1.45, 0.33@1.45, 0.28@1.44, 0.26@1.43, 0.23@1.41, 0.21@1.40, 0.18@1.39, 0.17@1.38, 0.14@1.37, 0.13|1.38, 0.14@1.37, 0.13@1.36, 0.11@1.35, 0.10$[MYCOLOR]3:0.41, -1.04@0.40, -1.04@0.38, -1.04@0.34, -1.04@0.32, -1.04@0.29, -1.04@0.25, -1.05@0.23, -1.05@0.22, -1.06@0.20, -1.06@0.18, -1.06@0.16, -1.07@0.14, -1.07|0.16, -1.07@0.14, -1.07@0.12, -1.07@0.09, -1.07@0.06, -1.07@0.05, -1.07|0.05, -1.07@0.06, -1.06@0.06, -1.05|0.06, -1.05@0.08, -1.05@0.09, -1.05@0.11, -1.05@0.15, -1.05@0.18, -1.05@0.23, -1.05@0.28, -1.05@0.31, -1.05@0.33, -1.05@0.35, -1.05@0.38, -1.05@0.40, -1.05@0.41, -1.05@0.43, -1.05@0.44, -1.05@0.46, -1.05@0.47, -1.07@0.47, -1.09@0.49, -1.12@0.50, -1.14@0.53, -1.23@0.55, -1.32@0.56, -1.41@0.56, -1.53@0.56, -1.62@0.56, -1.71@0.55, -1.81@0.54, -1.85@0.54, -1.88@0.53, -1.91@0.53, -1.94@0.53, -1.99@0.53, -2.03@0.54, -2.07@0.54, -2.11@0.57, -2.18@0.59, -2.23@0.63, -2.32@0.67, -2.42@0.73, -2.52@0.81, -2.67@0.85, -2.73@0.91, -2.81@0.94, -2.84@0.98, -2.86@1.02, -2.87@1.06, -2.87@1.16, -2.87@1.23, -2.87@1.36, -2.85@1.45, -2.85@1.53, -2.84@1.58, -2.82@1.61, -2.81@1.63, -2.80@1.64, -2.78@1.64, -2.75@1.64, -2.71@1.64, -2.61@1.63, -2.47@1.59, -2.25@1.55, -2.09@1.52, -1.95@1.49, -1.80@1.47, -1.69@1.45, -1.58@1.43, -1.48@1.41, -1.42@1.38, -1.33@1.37, -1.26@1.35, -1.20@1.33, -1.12@1.31, -1.01@1.30, -0.94@1.28, -0.85@1.28, -0.78@1.27, -0.68@1.27, -0.59@1.27, -0.53@1.27, -0.44@1.29, -0.36@1.30, -0.29@1.31, -0.24@1.32, -0.20@1.33, -0.16@1.34, -0.11|1.33, -0.16@1.34, -0.12@1.35, -0.08@1.36, -0.04@1.37, -0.03|0.78, -2.64@0.78, -2.63@0.78, -2.63@0.79, -2.61@0.81, -2.60@0.84, -2.59@0.86, -2.59@0.88, -2.59@0.89, -2.61@0.92, -2.64@0.95, -2.68@0.99, -2.74@1.01, -2.79@1.03, -2.83@1.04, -2.85|1.04, -2.85@1.05, -2.81@1.07, -2.76@1.09, -2.72@1.16, -2.63@1.27, -2.55@1.32, -2.52@1.39, -2.51@1.43, -2.51@1.45, -2.54@1.47, -2.58@1.48, -2.62@1.49, -2.66@1.49, -2.68$[MYCOLOR]4:-1.77, -0.57@-1.77, -0.56@-1.77, -0.55@-1.77, -0.50@-1.77, -0.43@-1.77, -0.36@-1.77, -0.31@-1.77, -0.29@-1.77, -0.28@-1.79, -0.28|-1.79, -0.28@-1.79, -0.26@-1.79, -0.25@-1.79, -0.23@-1.78, -0.20@-1.78, -0.18@-1.78, -0.16@-1.78, -0.14|-1.78, -0.16@-1.78, -0.14@-1.78, -0.12@-1.78, -0.11@-1.78, -0.09@-1.78, -0.08@-1.78, -0.05|-1.78, -0.05@-1.78, -0.07@-1.78, -0.09@-1.78, -0.10@-1.78, -0.12@-1.78, -0.14@-1.78, -0.16@-1.78, -0.17@-1.78, -0.18@-1.78, -0.21@-1.78, -0.23@-1.78, -0.27@-1.78, -0.30@-1.78, -0.33@-1.78, -0.40@-1.78, -0.45@-1.78, -0.52@-1.77, -0.59@-1.76, -0.65@-1.76, -0.72@-1.76, -0.83@-1.76, -0.90@-1.76, -1.06@-1.75, -1.23@-1.73, -1.35@-1.70, -1.42@-1.68, -1.47@-1.68, -1.52@-1.68, -1.58@-1.69, -1.63@-1.70, -1.68@-1.70, -1.74@-1.70, -1.77@-1.70, -1.83@-1.70, -1.88@-1.69, -2.00@-1.68, -2.12@-1.65, -2.26@-1.63, -2.38@-1.61, -2.48@-1.58, -2.63@-1.55, -2.76@-1.53, -2.86@-1.50, -3.01@-1.49, -3.11@-1.48, -3.21@-1.46, -3.28@-1.45, -3.29@-1.43, -3.31@-1.39, -3.32@-1.36, -3.33@-1.34, -3.33@-1.30, -3.33@-1.27, -3.32@-1.26, -3.30@-1.25, -3.28@-1.22, -3.22@-1.20, -3.17@-1.17, -3.09@-1.13, -2.97@-1.11, -2.90@-1.08, -2.75@-1.07, -2.70@-1.06, -2.59@-1.05, -2.50@-1.05, -2.46@-1.04, -2.35@-1.04, -2.25@-1.04, -2.18@-1.03, -2.09@-1.02, -1.92@-1.02, -1.77@-1.05, -1.44@-1.04, -1.41@-1.04, -1.38@-1.02, -1.32@-1.01, -1.29@-1.00, -1.22@-0.99, -1.18@-0.98, -1.17@-0.98, -1.16@-0.96, -1.14@-0.95, -1.14@-0.93, -1.14@-0.91, -1.14@-0.86, -1.14@-0.84, -1.14@-0.78, -1.14@-0.72, -1.14@-0.67, -1.14@-0.61, -1.14@-0.58, -1.14@-0.50, -1.14@-0.41, -1.14@-0.38, -1.14@-0.29, -1.13@-0.22, -1.12@-0.20, -1.11@-0.16, -1.10@-0.12, -1.09@-0.09, -1.09|-0.12, -1.09@-0.10, -1.09@-0.08, -1.09";

		GameObject roomMan = GameObject.FindGameObjectWithTag ("Room Manager");

		if (roomMan == null) {
			Debug.Log ("not logged in");
			return;
		}

		TurnRoomScript[] rooms = roomMan.transform.GetComponentsInChildren<TurnRoomScript> ();
		foreach (TurnRoomScript room in rooms) {

			if (room.activeVoteRoom == true) {
				myRoom = room;
				drawing = room.drawings;
				CreateDrawing ();
			}
		}
	}
	
	// Update is called once per frame
	void Update () {


		if (Input.GetKeyDown (KeyCode.D)) {

			CreateDrawing ();

		}
	}

	void CreateDrawing (){

		drawing = drawing.TrimStart ('$');
		string[] drawingInfos = drawing.Split ('$');

		foreach (string drawingInfo in drawingInfos) {

			string drawingString;
			string colorNum;
			string dotsString;

			string[] drawings = drawingInfo.Split (':');

			colorNum = drawings[0].Substring (MYCOLOR_SYM.Length);
			drawingString = drawings [1];
			dotsString = drawings [2];

			DrawLine (colorNum, drawingString, dotsString);

		}
	
	}

	void DrawLine (string colorNum, string drawing, string dotsString) {
	
		GameObject lineFab = new GameObject();
		GameObject dotFab = new GameObject();

		if (colorNum == "1") {
			lineFab = redLine;
			dotFab = redDot;
		} else if (colorNum == "2") {
			lineFab = blueLine;
			dotFab = blueDot;
		} else if (colorNum == "3") {
			lineFab = greenLine;
			dotFab = greenDot;
		} else if (colorNum == "4") {
			lineFab = orangeLine;
			dotFab = orangeDot;
		}

		string[] lines = drawing.Split ('|');

		foreach (string line in lines) {
			
			GameObject lineGo = Instantiate (lineFab);
			LineRenderer lineRend = lineGo.GetComponent <LineRenderer> ();

			string[] points = line.Split ('@');

			lineRend.numPositions = points.Length;

			for (int i = 0; i < points.Length; i++) {

				string[] vectArray = points [i].Split (',');

				Vector3 tempVect = new Vector3 (
					                  float.Parse (vectArray [0]),
					                  float.Parse (vectArray [1]),
					                  0);
				lineRend.SetPosition (i, tempVect);

			}
		}

		string[] dots = dotsString.Split ('|');

		foreach (string dot in dots) {

			GameObject lineGo = Instantiate (dotFab);
			LineRenderer lineRend = lineGo.GetComponent <LineRenderer> ();

			string[] points = dot.Split ('@');

			lineRend.numPositions = points.Length;

			for (int i = 0; i < points.Length; i++) {

				string[] vectArray = points [i].Split (',');

				Vector3 tempVect = new Vector3 (
					float.Parse (vectArray [0]),
					float.Parse (vectArray [1]),
					0);
				lineRend.SetPosition (i, tempVect);

			}
		}
	}
}
